{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"remove","lines":["´"],"id":9},{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"remove","lines":["´"]}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["="],"id":10}],[{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":[" "],"id":11}],[{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["F"],"id":12},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["l"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["a"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["s"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["k"]}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":13},"action":"insert","lines":["()"],"id":13}],[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["_"],"id":14},{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["_"]},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["n"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["a"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["m"]},{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":["e"]}],[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":[":"],"id":15},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":[":"]}],[{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"remove","lines":[":"],"id":16},{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"remove","lines":[":"]}],[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["_"],"id":17},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["_"]}],[{"start":{"row":2,"column":21},"end":{"row":4,"column":0},"action":"insert","lines":["","",""],"id":18,"ignore":true}],[{"start":{"row":4,"column":0},"end":{"row":7,"column":19},"action":"insert","lines":["if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":19,"ignore":true}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":20}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["i"],"id":21},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["m"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["p"]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["o"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["r"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["t"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":[" "],"id":22},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["o"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["s"]}],[{"start":{"row":3,"column":21},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":23},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":24}],[{"start":{"row":5,"column":0},"end":{"row":37,"column":77},"action":"insert","lines":["### Overview + Detail Page ###","","@app.route('/')","# Renders summary page of all tips inc. pagination","def all_categories():","    search = False","    q = request.args.get('q')","    if q:","        search = True","    ","    page = int(request.args.get('page', 1))","    per_page = 5","    offset = (page - 1) * per_page","","    tips = mongo.db.tips.find().sort(\"upvotes\", -1).limit(per_page).skip(offset)","    pagination = Pagination(page=page, per_page=per_page, offset=offset, total=mongo.db.tips.count(), search=search, record_name='tips')","    # 'page' is the default name of the page parameter, it can be customized","    # e.g. Pagination(page_parameter='p', ...)","    # or set PAGE_PARAMETER in config file","    # also likes page_parameter, you can customize for per_page_parameter","    # you can set PER_PAGE_PARAMETER in config file","    # e.g. Pagination(per_page_parameter='pp')","","    datenew = str(datetime.date.today().strftime('%d %B, %Y'))","","    return render_template('tips.html',","                           tips=tips,","                           pagination=pagination,","                           categories=mongo.db.categories.find(),","                           category=mongo.db.categories.find(),","                           all=mongo.db.tips.count(),","                           datenew=datenew,","                           new=mongo.db.tips.find({\"date\": datenew}).count())"],"id":25}],[{"start":{"row":1,"column":23},"end":{"row":1,"column":24},"action":"insert","lines":[","],"id":26}],[{"start":{"row":1,"column":24},"end":{"row":1,"column":25},"action":"insert","lines":[" "],"id":27},{"start":{"row":1,"column":25},"end":{"row":1,"column":26},"action":"insert","lines":["r"]},{"start":{"row":1,"column":26},"end":{"row":1,"column":27},"action":"insert","lines":["e"]},{"start":{"row":1,"column":27},"end":{"row":1,"column":28},"action":"insert","lines":["q"]},{"start":{"row":1,"column":28},"end":{"row":1,"column":29},"action":"insert","lines":["u"]},{"start":{"row":1,"column":29},"end":{"row":1,"column":30},"action":"insert","lines":["e"]},{"start":{"row":1,"column":30},"end":{"row":1,"column":31},"action":"insert","lines":["s"]},{"start":{"row":1,"column":31},"end":{"row":1,"column":32},"action":"insert","lines":["t"]}],[{"start":{"row":1,"column":32},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":28}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":33},"action":"insert","lines":["from flask_pymongo import PyMongo"],"id":29}],[{"start":{"row":2,"column":33},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":30},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":31},"action":"insert","lines":["from pymongo import MongoClient"],"id":31}],[{"start":{"row":4,"column":31},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":32}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":72},"action":"insert","lines":["from flask_paginate import Pagination, get_page_parameter, get_page_args"],"id":33}],[{"start":{"row":2,"column":33},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":34}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":36},"action":"insert","lines":["import datetime","from datetime import date, timedelta"],"id":35}],[{"start":{"row":1,"column":32},"end":{"row":1,"column":33},"action":"insert","lines":[","],"id":36}],[{"start":{"row":1,"column":33},"end":{"row":1,"column":34},"action":"insert","lines":[" "],"id":37}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":50},"action":"insert","lines":[" render_template"],"id":38}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":35},"action":"remove","lines":[" "],"id":39}],[{"start":{"row":9,"column":21},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":40},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":11,"column":0},"end":{"row":13,"column":33},"action":"insert","lines":["mongo = PyMongo(app)","","mod = Blueprint('tips', __name__)"],"id":41}],[{"start":{"row":1,"column":49},"end":{"row":1,"column":50},"action":"insert","lines":[","],"id":42}],[{"start":{"row":1,"column":50},"end":{"row":1,"column":51},"action":"insert","lines":[" "],"id":43},{"start":{"row":1,"column":51},"end":{"row":1,"column":52},"action":"insert","lines":["B"]},{"start":{"row":1,"column":52},"end":{"row":1,"column":53},"action":"insert","lines":["l"]},{"start":{"row":1,"column":53},"end":{"row":1,"column":54},"action":"insert","lines":["u"]},{"start":{"row":1,"column":54},"end":{"row":1,"column":55},"action":"insert","lines":["e"]},{"start":{"row":1,"column":55},"end":{"row":1,"column":56},"action":"insert","lines":["p"]},{"start":{"row":1,"column":56},"end":{"row":1,"column":57},"action":"insert","lines":["o"]},{"start":{"row":1,"column":57},"end":{"row":1,"column":58},"action":"insert","lines":["r"]}],[{"start":{"row":1,"column":57},"end":{"row":1,"column":58},"action":"remove","lines":["r"],"id":44},{"start":{"row":1,"column":56},"end":{"row":1,"column":57},"action":"remove","lines":["o"]}],[{"start":{"row":1,"column":56},"end":{"row":1,"column":57},"action":"insert","lines":["r"],"id":45},{"start":{"row":1,"column":57},"end":{"row":1,"column":58},"action":"insert","lines":["i"]},{"start":{"row":1,"column":58},"end":{"row":1,"column":59},"action":"insert","lines":["n"]},{"start":{"row":1,"column":59},"end":{"row":1,"column":60},"action":"insert","lines":["t"]}],[{"start":{"row":47,"column":77},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":46},{"start":{"row":48,"column":0},"end":{"row":48,"column":27},"action":"insert","lines":["                           "]}],[{"start":{"row":48,"column":26},"end":{"row":48,"column":27},"action":"remove","lines":[" "],"id":47},{"start":{"row":48,"column":25},"end":{"row":48,"column":26},"action":"remove","lines":[" "]},{"start":{"row":48,"column":24},"end":{"row":48,"column":25},"action":"remove","lines":[" "]},{"start":{"row":48,"column":20},"end":{"row":48,"column":24},"action":"remove","lines":["    "]},{"start":{"row":48,"column":16},"end":{"row":48,"column":20},"action":"remove","lines":["    "]},{"start":{"row":48,"column":12},"end":{"row":48,"column":16},"action":"remove","lines":["    "]},{"start":{"row":48,"column":8},"end":{"row":48,"column":12},"action":"remove","lines":["    "]},{"start":{"row":48,"column":4},"end":{"row":48,"column":8},"action":"remove","lines":["    "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["",""],"id":48}],[{"start":{"row":49,"column":0},"end":{"row":57,"column":16},"action":"insert","lines":["@app.route('/detail/<tip_id>', methods=['GET'])","# Renders page for single tip","def tip_detail(tip_id):","    the_tip = mongo.db.tips.find_one({\"_id\": ObjectId(tip_id)})","    ","    return render_template(\"tipdetail.html\",","    all=1,","    new=mongo.db.tips.find({\"date\": str(datetime.date.today().strftime('%d %B, %Y'))}).count(),","    tip=the_tip)"],"id":49}],[{"start":{"row":4,"column":36},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":50}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":34},"action":"insert","lines":["from bson.objectid import ObjectId"],"id":51}],[{"start":{"row":16,"column":0},"end":{"row":58,"column":16},"action":"remove","lines":["### Overview + Detail Page ###","","@app.route('/')","# Renders summary page of all tips inc. pagination","def all_categories():","    search = False","    q = request.args.get('q')","    if q:","        search = True","    ","    page = int(request.args.get('page', 1))","    per_page = 5","    offset = (page - 1) * per_page","","    tips = mongo.db.tips.find().sort(\"upvotes\", -1).limit(per_page).skip(offset)","    pagination = Pagination(page=page, per_page=per_page, offset=offset, total=mongo.db.tips.count(), search=search, record_name='tips')","    # 'page' is the default name of the page parameter, it can be customized","    # e.g. Pagination(page_parameter='p', ...)","    # or set PAGE_PARAMETER in config file","    # also likes page_parameter, you can customize for per_page_parameter","    # you can set PER_PAGE_PARAMETER in config file","    # e.g. Pagination(per_page_parameter='pp')","","    datenew = str(datetime.date.today().strftime('%d %B, %Y'))","","    return render_template('tips.html',","                           tips=tips,","                           pagination=pagination,","                           categories=mongo.db.categories.find(),","                           category=mongo.db.categories.find(),","                           all=mongo.db.tips.count(),","                           datenew=datenew,","                           new=mongo.db.tips.find({\"date\": datenew}).count())","","@app.route('/detail/<tip_id>', methods=['GET'])","# Renders page for single tip","def tip_detail(tip_id):","    the_tip = mongo.db.tips.find_one({\"_id\": ObjectId(tip_id)})","    ","    return render_template(\"tipdetail.html\",","    all=1,","    new=mongo.db.tips.find({\"date\": str(datetime.date.today().strftime('%d %B, %Y'))}).count(),","    tip=the_tip)"],"id":52},{"start":{"row":16,"column":0},"end":{"row":83,"column":16},"action":"insert","lines":["### Overview + Detail Page ###","","@app.route('/')","# Renders summary page of all tips inc. pagination","def all_categories():","    search = False","    q = request.args.get('q')","    if q:","        search = True","    ","    page = int(request.args.get('page', 1))","    per_page = 5","    offset = (page - 1) * per_page","","    tips = mongo.db.tips.find().sort(\"upvotes\", -1).limit(per_page).skip(offset)","    pagination = Pagination(page=page, per_page=per_page, offset=offset, total=mongo.db.tips.count(), search=search, record_name='tips')","    # 'page' is the default name of the page parameter, it can be customized","    # e.g. Pagination(page_parameter='p', ...)","    # or set PAGE_PARAMETER in config file","    # also likes page_parameter, you can customize for per_page_parameter","    # you can set PER_PAGE_PARAMETER in config file","    # e.g. Pagination(per_page_parameter='pp')","","    datenew = str(datetime.date.today().strftime('%d %B, %Y'))","","    return render_template('tips.html',","                           tips=tips,","                           pagination=pagination,","                           categories=mongo.db.categories.find(),","                           category=mongo.db.categories.find(),","                           all=mongo.db.tips.count(),","                           datenew=datenew,","                           new=mongo.db.tips.find({\"date\": datenew}).count())","        ","@app.route('/<category>', methods=['POST','GET'])","# Renders page filtered by category incl. pagination","def sort_by_category(category):","    search = False","    q = request.args.get('q')","    if q:","        search = True","    ","    page = int(request.args.get('page', 1))","    per_page = 5","    offset = (page - 1) * per_page","    ","    tips=mongo.db.tips.find({\"category_name\" : category}).sort(\"upvotes\", -1).limit(per_page).skip(offset)","    categories=mongo.db.categories.find()","    pagination = Pagination(page=page, per_page=per_page, offset=offset, total=mongo.db.tips.find({\"category_name\" : category}).count(), search=search, record_name='tips')","    ","    return render_template(\"category.html\",","    tips=tips,","    pagination=pagination,","    categories=categories,","    category=category,","    all=mongo.db.tips.find({\"category_name\" : category}).count(),","    new=mongo.db.tips.find({\"category_name\" : category,","                            \"date\": str(datetime.date.today().strftime('%d %B, %Y'))}).count())","    ","@app.route('/detail/<tip_id>', methods=['GET'])","# Renders page for single tip","def tip_detail(tip_id):","    the_tip = mongo.db.tips.find_one({\"_id\": ObjectId(tip_id)})","    ","    return render_template(\"tipdetail.html\",","    all=1,","    new=mongo.db.tips.find({\"date\": str(datetime.date.today().strftime('%d %B, %Y'))}).count(),","    tip=the_tip)"]}],[{"start":{"row":83,"column":16},"end":{"row":84,"column":0},"action":"insert","lines":["",""],"id":53},{"start":{"row":84,"column":0},"end":{"row":84,"column":4},"action":"insert","lines":["    "]},{"start":{"row":84,"column":4},"end":{"row":85,"column":0},"action":"insert","lines":["",""]},{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"remove","lines":["    "],"id":54}],[{"start":{"row":85,"column":0},"end":{"row":110,"column":67},"action":"insert","lines":["### Upvoting ###","","@app.route('/upvote/<tip_id>', methods=['GET'])","# Allows users to upvote tips on the summary page","def upvote(tip_id):","    mongo.db.tips.find_one_and_update(","            {'_id': ObjectId(tip_id)},","            {'$inc': {'upvotes': int(1)}}","            )","    return redirect(url_for('all_categories'))","    ","@app.route('/upvote-detail/<tip_id>', methods=['GET'])","# Allows users to upvote tips on the detail page","def upvote_detail(tip_id):","    mongo.db.tips.find_one_and_update(","        {'_id': ObjectId(tip_id)},","        {'$inc': {'upvotes': int(1)}})","    return redirect(url_for('tip_detail', tip_id=tip_id))","","@app.route('/upvote/<category>/<tip_id>', methods=['GET'])","# Allows users to upvote tips on the filtered summary page","def upvote_category(category, tip_id):","    mongo.db.tips.find_one_and_update(","        {'_id': ObjectId(tip_id)},","        {'$inc': {'upvotes': int(1)}})","    return redirect(url_for('sort_by_category', category=category))"],"id":55}],[{"start":{"row":1,"column":60},"end":{"row":1,"column":61},"action":"insert","lines":[","],"id":56}],[{"start":{"row":1,"column":61},"end":{"row":1,"column":62},"action":"insert","lines":[" "],"id":57},{"start":{"row":1,"column":62},"end":{"row":1,"column":63},"action":"insert","lines":["r"]},{"start":{"row":1,"column":63},"end":{"row":1,"column":64},"action":"insert","lines":["e"]},{"start":{"row":1,"column":64},"end":{"row":1,"column":65},"action":"insert","lines":["d"]},{"start":{"row":1,"column":65},"end":{"row":1,"column":66},"action":"insert","lines":["i"]},{"start":{"row":1,"column":66},"end":{"row":1,"column":67},"action":"insert","lines":["r"]}],[{"start":{"row":1,"column":62},"end":{"row":1,"column":67},"action":"remove","lines":["redir"],"id":58},{"start":{"row":1,"column":62},"end":{"row":1,"column":70},"action":"insert","lines":["redirect"]}],[{"start":{"row":1,"column":70},"end":{"row":1,"column":71},"action":"insert","lines":[","],"id":59}],[{"start":{"row":1,"column":71},"end":{"row":1,"column":72},"action":"insert","lines":[" "],"id":60},{"start":{"row":1,"column":72},"end":{"row":1,"column":73},"action":"insert","lines":["u"]},{"start":{"row":1,"column":73},"end":{"row":1,"column":74},"action":"insert","lines":["r"]},{"start":{"row":1,"column":74},"end":{"row":1,"column":75},"action":"insert","lines":["l"]}],[{"start":{"row":1,"column":72},"end":{"row":1,"column":75},"action":"remove","lines":["url"],"id":61},{"start":{"row":1,"column":72},"end":{"row":1,"column":79},"action":"insert","lines":["url_for"]}],[{"start":{"row":110,"column":67},"end":{"row":111,"column":0},"action":"insert","lines":["",""],"id":62},{"start":{"row":111,"column":0},"end":{"row":111,"column":4},"action":"insert","lines":["    "]},{"start":{"row":111,"column":4},"end":{"row":112,"column":0},"action":"insert","lines":["",""]},{"start":{"row":112,"column":0},"end":{"row":112,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":112,"column":0},"end":{"row":112,"column":4},"action":"remove","lines":["    "],"id":63}],[{"start":{"row":112,"column":0},"end":{"row":136,"column":67},"action":"insert","lines":["### Downvoting ###","","@app.route('/downvote/<tip_id>', methods=['GET'])","# Allows users to downvote tips on the summary page","def downvote(tip_id):","    mongo.db.tips.find_one_and_update(","        {'_id': ObjectId(tip_id)},","        {'$inc': {'upvotes': int(-1)}})","    return redirect(url_for('all_categories'))","    ","@app.route('/downvote-detail/<tip_id>', methods=['GET'])","# Allows users to downvote tips on the detail page","def downvote_detail(tip_id):","    mongo.db.tips.find_one_and_update(","        {'_id': ObjectId(tip_id)},","        {'$inc': {'upvotes': int(-1)}})","    return redirect(url_for('tip_detail', tip_id=tip_id))","","@app.route('/downvote/<category>/<tip_id>', methods=['GET'])","# Allows users to downvote tips on the filtered summary page","def downvote_category(category, tip_id):","    mongo.db.tips.find_one_and_update(","        {'_id': ObjectId(tip_id)},","        {'$inc': {'upvotes': int(-1)}})","    return redirect(url_for('sort_by_category', category=category))"],"id":64}],[{"start":{"row":136,"column":67},"end":{"row":137,"column":0},"action":"insert","lines":["",""],"id":65},{"start":{"row":137,"column":0},"end":{"row":137,"column":4},"action":"insert","lines":["    "]},{"start":{"row":137,"column":4},"end":{"row":138,"column":0},"action":"insert","lines":["",""]},{"start":{"row":138,"column":0},"end":{"row":138,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":138,"column":0},"end":{"row":138,"column":4},"action":"remove","lines":["    "],"id":66}],[{"start":{"row":138,"column":0},"end":{"row":160,"column":46},"action":"insert","lines":["### Adding, editing & deleting TIPS ###","","@app.route('/add_tip')","# Renders page with form for adding new tip","@login_required","def add_tip():","    return render_template(\"addtip.html\",","    categories=mongo.db.categories.find())","    ","@app.route('/insert_tip', methods=['POST'])","# Inserts new tip in database based on entries in form","# Upvotes count set to 0","def insert_tip():","    tips = mongo.db.tips","    tips.insert_one(","        {","            'tip_name': request.form.get('tip_name'), ","            'category_name': request.form.get('category_name'), ","            'tip_description': request.form.get('tip_description'), ","            'date': request.form.get('date'), ","            'upvotes': 0","        })","    return redirect(url_for('all_categories'))"],"id":67}],[{"start":{"row":8,"column":72},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":68}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":102},"action":"insert","lines":["from flask_login import LoginManager, login_user, logout_user, login_required, UserMixin, current_user"],"id":69}],[{"start":{"row":161,"column":46},"end":{"row":162,"column":0},"action":"insert","lines":["",""],"id":70},{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"insert","lines":["    "]},{"start":{"row":162,"column":4},"end":{"row":163,"column":0},"action":"insert","lines":["",""]},{"start":{"row":163,"column":0},"end":{"row":163,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":163,"column":0},"end":{"row":163,"column":4},"action":"remove","lines":["    "],"id":71}],[{"start":{"row":163,"column":0},"end":{"row":184,"column":46},"action":"insert","lines":["@app.route('/edit_tip/<tip_id>')","# Renders tips with pre-populated form for editing tip","def edit_tip(tip_id):","    the_tip = mongo.db.tips.find_one({\"_id\": ObjectId(tip_id)})","    all_categories = mongo.db.categories.find()","    return render_template('edittip.html', tip=the_tip, categories=all_categories)","    ","@app.route('/update_tip/<tip_id>', methods=[\"POST\"])","# Inserts updated tip into database based on form entries","# Upvote count maintained from before","def update_tip(tip_id):","    tips = mongo.db.tips","    upvotes = mongo.db.tips.find_one({'_id': ObjectId(tip_id)}, {\"upvotes\": True, \"_id\": False})","    tips.update( {'_id': ObjectId(tip_id)},","    {","        'tip_name':request.form.get('tip_name'),","        'category_name':request.form.get('category_name'),","        'tip_description': request.form.get('tip_description'),","        'date': request.form.get('date'),","        'upvotes': upvotes[\"upvotes\"],","    })","    return redirect(url_for('all_categories'))"],"id":72}],[{"start":{"row":184,"column":46},"end":{"row":185,"column":0},"action":"insert","lines":["",""],"id":73},{"start":{"row":185,"column":0},"end":{"row":185,"column":4},"action":"insert","lines":["    "]},{"start":{"row":185,"column":4},"end":{"row":186,"column":0},"action":"insert","lines":["",""]},{"start":{"row":186,"column":0},"end":{"row":186,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":186,"column":0},"end":{"row":186,"column":4},"action":"remove","lines":["    "],"id":74}],[{"start":{"row":186,"column":0},"end":{"row":190,"column":46},"action":"insert","lines":["@app.route('/delete_tip/<tip_id>')","# Deletes chosen tip from database","def delete_tip(tip_id):","    mongo.db.tips.remove({'_id': ObjectId(tip_id)})","    return redirect(url_for('all_categories'))"],"id":75}],[{"start":{"row":190,"column":46},"end":{"row":191,"column":0},"action":"insert","lines":["",""],"id":76},{"start":{"row":191,"column":0},"end":{"row":191,"column":4},"action":"insert","lines":["    "]},{"start":{"row":191,"column":4},"end":{"row":192,"column":0},"action":"insert","lines":["",""]},{"start":{"row":192,"column":0},"end":{"row":192,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":192,"column":0},"end":{"row":192,"column":4},"action":"remove","lines":["    "],"id":77}],[{"start":{"row":192,"column":0},"end":{"row":198,"column":42},"action":"insert","lines":["### Adding, editing & deleting CATEGORIES ###","","@app.route('/get_categories')","# Renders page with overview of all categories","def get_categories():","    return render_template('categories.html',","    categories=mongo.db.categories.find())"],"id":78}],[{"start":{"row":198,"column":42},"end":{"row":199,"column":0},"action":"insert","lines":["",""],"id":79},{"start":{"row":199,"column":0},"end":{"row":199,"column":4},"action":"insert","lines":["    "]},{"start":{"row":199,"column":4},"end":{"row":200,"column":0},"action":"insert","lines":["",""]},{"start":{"row":200,"column":0},"end":{"row":200,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":200,"column":0},"end":{"row":200,"column":4},"action":"remove","lines":["    "],"id":80}],[{"start":{"row":200,"column":0},"end":{"row":211,"column":46},"action":"insert","lines":["@app.route('/new_category')","# Renders page with empty form for creating new category","def new_category():","    return render_template('addcategory.html')","    ","@app.route('/insert_category', methods=['POST'])","# Inserts new category into databse based on form entries","def insert_category():","    categories = mongo.db.categories","    category_doc = {'category_name': request.form['category_name']}","    categories.insert_one(category_doc)","    return redirect(url_for('get_categories'))"],"id":81}],[{"start":{"row":211,"column":46},"end":{"row":212,"column":0},"action":"insert","lines":["",""],"id":82},{"start":{"row":212,"column":0},"end":{"row":212,"column":4},"action":"insert","lines":["    "]},{"start":{"row":212,"column":4},"end":{"row":213,"column":0},"action":"insert","lines":["",""]},{"start":{"row":213,"column":0},"end":{"row":213,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":213,"column":0},"end":{"row":213,"column":4},"action":"remove","lines":["    "],"id":83}],[{"start":{"row":213,"column":0},"end":{"row":225,"column":46},"action":"insert","lines":["@app.route('/edit_category/<category_id>')","# Renders page with pre-populated form for editing chosen category","def edit_category(category_id):","    return render_template('editcategory.html',","    category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))","    ","@app.route('/update_category/<category_id>', methods=['POST'])","# Inserts updated category into databse based on form entries","def update_category(category_id):","    mongo.db.categories.update(","        {'_id': ObjectId(category_id)},","        {'category_name': request.form['category_name']})","    return redirect(url_for('get_categories'))"],"id":84}],[{"start":{"row":225,"column":46},"end":{"row":226,"column":0},"action":"insert","lines":["",""],"id":85},{"start":{"row":226,"column":0},"end":{"row":226,"column":4},"action":"insert","lines":["    "]},{"start":{"row":226,"column":4},"end":{"row":227,"column":0},"action":"insert","lines":["",""]},{"start":{"row":227,"column":0},"end":{"row":227,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":227,"column":0},"end":{"row":227,"column":4},"action":"remove","lines":["    "],"id":86}],[{"start":{"row":227,"column":0},"end":{"row":232,"column":0},"action":"insert","lines":["@app.route('/delete_category/<category_id>')","# Deletes chosen category","def delete_category(category_id):","    mongo.db.categories.remove({'_id': ObjectId(category_id)})","    return redirect(url_for('get_categories'))",""],"id":87}],[{"start":{"row":231,"column":46},"end":{"row":232,"column":0},"action":"remove","lines":["",""],"id":88}],[{"start":{"row":231,"column":46},"end":{"row":232,"column":0},"action":"insert","lines":["",""],"id":89},{"start":{"row":232,"column":0},"end":{"row":232,"column":4},"action":"insert","lines":["    "]},{"start":{"row":232,"column":4},"end":{"row":233,"column":0},"action":"insert","lines":["",""]},{"start":{"row":233,"column":0},"end":{"row":233,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":233,"column":0},"end":{"row":233,"column":4},"action":"remove","lines":["    "],"id":90}],[{"start":{"row":233,"column":0},"end":{"row":247,"column":42},"action":"insert","lines":["### Summary Charts ###","@app.route(\"/user_tips/tips\")","# Renders page with all data in database in json format","def user_tips_tips():","    tips = mongo.db.tips.find()","    json_tips = []","    for tip in tips:","        json_tips.append(tip)","    json_tips = json.dumps(json_tips, default=json_util.default)","    return json_tips","","@app.route(\"/summary\")","# Renders page with summary charts","def summary():","    return render_template('summary.html')"],"id":91}],[{"start":{"row":9,"column":102},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":92}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["import json",""],"id":93}],[{"start":{"row":10,"column":11},"end":{"row":11,"column":0},"action":"remove","lines":["",""],"id":94}],[{"start":{"row":10,"column":11},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":95}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":32},"action":"insert","lines":["from bson import json_util","from bson.json_util import dumps"],"id":96}],[{"start":{"row":18,"column":33},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":97},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":23},"action":"insert","lines":["pip install flask-login"],"id":98}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":23},"action":"remove","lines":["pip install flask-login"],"id":99}],[{"start":{"row":20,"column":0},"end":{"row":42,"column":46},"action":"insert","lines":["### User Registration ###","@login_manager.user_loader","# Loads user","def load_user(user_id):","    return User(user_id)","","class User(UserMixin):","# Assigns user ID","  def __init__(self,id):","    self.id = id","","@app.route('/login/')","# Login functionality","def login():","    login_user(User(1))","    return redirect(url_for('all_categories'))","","@app.route('/logout/')","@login_required","# Logout functioniality","def logout():","    logout_user()","    return redirect(url_for('all_categories'))"],"id":100}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":102},"action":"remove","lines":["from flask_login import LoginManager, login_user, logout_user, login_required, UserMixin, current_user"],"id":101},{"start":{"row":9,"column":0},"end":{"row":9,"column":102},"action":"insert","lines":["from flask_login import LoginManager, login_user, logout_user, login_required, UserMixin, current_user"]}],[{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":102},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":20,"column":0},"end":{"row":23,"column":41},"action":"insert","lines":["login_manager = LoginManager()","login_manager.init_app(app)","login_manager.login_view = ''","app.config['SECRET_KEY'] = os.urandom(24)"],"id":103}],[{"start":{"row":16,"column":20},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":104}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":84},"action":"insert","lines":["app.config[\"MONGO_DBNAME\"] = 'user_tips'","app.config[\"MONGO_URI\"] = 'mongodb://admin:g00gle@ds121636.mlab.com:21636/user_tips'"],"id":105}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":84},"action":"remove","lines":["app.config[\"MONGO_DBNAME\"] = 'user_tips'","app.config[\"MONGO_URI\"] = 'mongodb://admin:g00gle@ds121636.mlab.com:21636/user_tips'"],"id":106}],[{"start":{"row":16,"column":20},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":107}],[{"start":{"row":14,"column":21},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":108}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":84},"action":"insert","lines":["app.config[\"MONGO_DBNAME\"] = 'user_tips'","app.config[\"MONGO_URI\"] = 'mongodb://admin:g00gle@ds121636.mlab.com:21636/user_tips'"],"id":109}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":15,"column":40},"end":{"row":15,"column":40},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1563220087244,"hash":"6d4e62b815e575488f312d99b9280c6aa2266569"}